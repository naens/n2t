class Item {

    field integer type;
    field boolean terminal;
    field String stringValue;
    field integer integerValue;    
    field boolean booleanValue;
    field List subItems;

    constructor Item new() {
        let subItems = 0;
        return this;
    }

    method integer getType() {
        return type;
    }

    method void setTerminal(boolean b) {
        let terminal = b;
        return;
    }

    method void setType(integer typeValue) {
        let type = typeValue;
        return;
    }

    method void setStringValue(String string) {
        let stringValue = string;
        return;
    }

    method void setIntegerValue(integer val) {
        let integerValue = val;
        return;
    }

    method void setBooleanValue(boolean b) {
        let booleanValue = b;
        return;
    }

    method void addSubItem(Item item) {
        if (subItems = 0) {
            let subItems = List.new();
        }
        do subItems.append(item);
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void print() {
        var String intString;
        if (terminal) {
            if (type = Const.T_INTEGER()) {
                let intString = String.new(Const.SCREEN_WIDTH());
                do intString.setInt(integerValue);
                do Display.printConst("<integer:");
                do Display.printString(intString);
                do Display.printConst(">");
                do intString.dispose();
                return;
            }
            if (type = Const.T_STRING()) {
                do Display.printConst("<string:");
                do Display.printString(stringValue);
                do Display.printConst(">");
                return;
            }
            if (type = Const.T_BOOLEAN()) {
                if (booleanValue) {
                    do Display.printConst("<boolean:true>");
                } else {
                    do Display.printConst("<boolean:false>");
                }
                return;
            }
            if (type = Const.IDENT()) {
                do Display.printConst("<identifier:");
                do Display.printString(stringValue);
                do Display.printConst(">");
                return;
            }
            if ((type = Const.CH_PAROP()) | (type = Const.CH_PARCL())
                | (type = Const.CH_COMMA()) | (type = Const.CH_EQUALS())
                | (type = Const.CH_PLUS()) | (type = Const.CH_MINUS())
                | (type = Const.CH_SLASH()) | (type = Const.CH_STAR())
                | (type = Const.CH_GREATER()) | (type = Const.CH_LOWER())) {
                do Display.printConst("<char:");
                do Display.printChar(type);
                do Display.printConst(">");
                return;
            }   
            if ((type = Const.KW_DECLARE()) | (type = Const.KW_DO())
                | (type = Const.KW_WHILE()) | (type = Const.KW_IF())
                | (type = Const.KW_THEN()) | (type = Const.KW_ELSE())
                | (type = Const.KW_TO()) | (type = Const.KW_BY())
                | (type = Const.KW_END()) | (type = Const.KW_AND())
                | (type = Const.KW_OR()) | (type = Const.KW_NOT()) 
                | (type = Const.KW_MOD())) {
                do Display.printConst("<keyword:");
                do Display.printString(Keywords.getKeywordString(type));
                do Display.printConst(">");
                return;
            }   
            if ((type = Const.RW_INTEGER()) | (type = Const.RW_STRING())
                | (type = Const.RW_BOOLEAN())) {
                do Display.printConst("<type:");
                do Display.printString(Keywords.getKeywordString(type));
                do Display.printConst(">");
                return;
            }   

            do Display.printConst("<unknown_terminal>");
            return;
        } else {
            do Display.printConst("<nonterminal>");
        }
        return;
    }

}
